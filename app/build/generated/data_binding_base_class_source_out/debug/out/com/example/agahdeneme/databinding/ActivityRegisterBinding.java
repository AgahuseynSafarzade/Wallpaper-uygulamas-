// Generated by view binder compiler. Do not edit!
package com.example.agahdeneme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.agahdeneme.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout llMainLayout;

  @NonNull
  public final TextView loginText;

  @NonNull
  public final Button regButtonRegister;

  @NonNull
  public final ImageView regLoginImage;

  @NonNull
  public final EditText regUserEmail;

  @NonNull
  public final EditText regUserName;

  @NonNull
  public final EditText regUserPassword;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout llMainLayout, @NonNull TextView loginText,
      @NonNull Button regButtonRegister, @NonNull ImageView regLoginImage,
      @NonNull EditText regUserEmail, @NonNull EditText regUserName,
      @NonNull EditText regUserPassword) {
    this.rootView = rootView;
    this.llMainLayout = llMainLayout;
    this.loginText = loginText;
    this.regButtonRegister = regButtonRegister;
    this.regLoginImage = regLoginImage;
    this.regUserEmail = regUserEmail;
    this.regUserName = regUserName;
    this.regUserPassword = regUserPassword;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_main_layout;
      LinearLayout llMainLayout = ViewBindings.findChildViewById(rootView, id);
      if (llMainLayout == null) {
        break missingId;
      }

      id = R.id.loginText;
      TextView loginText = ViewBindings.findChildViewById(rootView, id);
      if (loginText == null) {
        break missingId;
      }

      id = R.id.reg_button_register;
      Button regButtonRegister = ViewBindings.findChildViewById(rootView, id);
      if (regButtonRegister == null) {
        break missingId;
      }

      id = R.id.reg_login_image;
      ImageView regLoginImage = ViewBindings.findChildViewById(rootView, id);
      if (regLoginImage == null) {
        break missingId;
      }

      id = R.id.reg_user_email;
      EditText regUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (regUserEmail == null) {
        break missingId;
      }

      id = R.id.reg_user_name;
      EditText regUserName = ViewBindings.findChildViewById(rootView, id);
      if (regUserName == null) {
        break missingId;
      }

      id = R.id.reg_user_password;
      EditText regUserPassword = ViewBindings.findChildViewById(rootView, id);
      if (regUserPassword == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, llMainLayout, loginText,
          regButtonRegister, regLoginImage, regUserEmail, regUserName, regUserPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
