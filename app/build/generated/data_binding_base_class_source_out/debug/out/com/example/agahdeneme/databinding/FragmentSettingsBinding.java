// Generated by view binder compiler. Do not edit!
package com.example.agahdeneme.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.agahdeneme.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton exitButton;

  @NonNull
  public final Button favoritesButton;

  @NonNull
  public final EditText newPassword;

  @NonNull
  public final ImageView settingsImage;

  @NonNull
  public final Button updateButton;

  @NonNull
  public final TextView userNameText;

  @NonNull
  public final TextView usertext;

  private FragmentSettingsBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton exitButton, @NonNull Button favoritesButton,
      @NonNull EditText newPassword, @NonNull ImageView settingsImage, @NonNull Button updateButton,
      @NonNull TextView userNameText, @NonNull TextView usertext) {
    this.rootView = rootView;
    this.exitButton = exitButton;
    this.favoritesButton = favoritesButton;
    this.newPassword = newPassword;
    this.settingsImage = settingsImage;
    this.updateButton = updateButton;
    this.userNameText = userNameText;
    this.usertext = usertext;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.exit_button;
      MaterialButton exitButton = ViewBindings.findChildViewById(rootView, id);
      if (exitButton == null) {
        break missingId;
      }

      id = R.id.favorites_button;
      Button favoritesButton = ViewBindings.findChildViewById(rootView, id);
      if (favoritesButton == null) {
        break missingId;
      }

      id = R.id.new_password;
      EditText newPassword = ViewBindings.findChildViewById(rootView, id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.settings_image;
      ImageView settingsImage = ViewBindings.findChildViewById(rootView, id);
      if (settingsImage == null) {
        break missingId;
      }

      id = R.id.update_button;
      Button updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      id = R.id.user_name_text;
      TextView userNameText = ViewBindings.findChildViewById(rootView, id);
      if (userNameText == null) {
        break missingId;
      }

      id = R.id.usertext;
      TextView usertext = ViewBindings.findChildViewById(rootView, id);
      if (usertext == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((RelativeLayout) rootView, exitButton, favoritesButton,
          newPassword, settingsImage, updateButton, userNameText, usertext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
